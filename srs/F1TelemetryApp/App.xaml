<Application x:Class="F1TelemetryApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:F1TelemetryApp.Controls"
             StartupUri="View\MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="PrimaryBackground" Color="#212121"/>
            <SolidColorBrush x:Key="SecondaryBackground" Color="#111111"/>
            <SolidColorBrush x:Key="PrimaryGreen" Color="#00c317"/>
            <SolidColorBrush x:Key="SecondaryGreen" Color="#269934"/>
            <SolidColorBrush x:Key="PrimaryText" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="NavBarHover" Color="#444444"/>
            <SolidColorBrush x:Key="IconPrimary" Color="#888888"/>
            <SolidColorBrush x:Key="IconHover" Color="#CC4444"/>
            <SolidColorBrush x:Key="IconSelected" Color="#FE1E00"/>

            <Style x:Key="DefaultGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            </Style>

            <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>

            <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>

            <Style x:Key="DefaultListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>

            <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="Width" Value="70"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="DefaultHeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
                <Setter Property="Margin" Value="2,5"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>

            <Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
            </Style>

            <!-- Checkbox -->
            <Style x:Key="DefaultCheckboxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"
                                            Width="13" Height="13" 
                                            CornerRadius="0" 
                                            Background="#C0C0C0"
                                            BorderThickness="1"
                                            BorderBrush="#404040">
                                        <Path 
                                            Width="7" Height="7" 
                                            x:Name="CheckMark"
                                            SnapsToDevicePixels="False" 
                                            Stroke="#404040"
                                            StrokeThickness="2"
                                            Data="M 0 3.5 L 2 6 L 6.7 0" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                    <Setter Property="Foreground" Value="#888888"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultTabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>

            <Style x:Key="DefaultTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border Name="Border"
                                    Margin="0,2"
                                    CornerRadius="4,4,0,0"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{StaticResource SecondaryBackground}"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                <ContentPresenter x:Name="Content"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="2"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" TargetName="Border" Value="Gray"/>
                                    <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultNavButtonStyle" TargetType="{x:Type controls:NavigationButton}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type controls:NavigationButton}">
                            <Border x:Name="NavBarBack" CornerRadius="5" Padding="{TemplateBinding Padding}" Background="{StaticResource SecondaryBackground}">
                                <Path x:Name="NavBarIcon" Height="20" Width="20" Stretch="Uniform" Fill="{StaticResource IconPrimary}" Data="{TemplateBinding Icon}"/>
                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="NavBarBack" Value="{StaticResource NavBarHover}"/>
                                    <Setter Property="Fill" TargetName="NavBarIcon" Value="{StaticResource IconHover}"/>
                                </Trigger>

                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Fill" TargetName="NavBarIcon" Value="{StaticResource IconSelected}"/>
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultToggleBtnStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5,0"/>
                <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border CornerRadius="{TemplateBinding Border.CornerRadius}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <!-- Default settings -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Content" Value="Start Telemetry"/>
                                </MultiTrigger>
                                
                                <!-- If not started and hovering over -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource SecondaryGreen}"/>
                                    <Setter Property="Content" Value="Start Telemetry"/>
                                </MultiTrigger>

                                <!-- If pressed to start -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource PrimaryGreen}"/>
                                </MultiTrigger>

                                <!-- Is started and not hovered over -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource PrimaryGreen}"/>
                                    <Setter Property="Content" Value="Telemetry running.."/>
                                </MultiTrigger>

                                <!-- If started and hovering over -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource IconHover}"/>
                                    <Setter Property="Content" Value="Stop Telemetry"/>
                                </MultiTrigger>
                                
                                <!-- If pressed to stop -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource IconSelected}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.CornerRadius" Value="3"/>
            </Style>

            <Style x:Key="StartStopFeedToggleBtnStyle" TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleBtnStyle}">
                <Setter Property="Width" Value="120"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryText}"/>
            </Style>
            
            <!-- Telemetry Graph -->
            <Style TargetType="{x:Type controls:TelemetryGraph}">
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>